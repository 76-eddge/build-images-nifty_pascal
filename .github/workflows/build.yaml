name: Build

on:
  push:
    branches: ['**']
    tags-ignore: ['**']
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        tag:
        - nifty_pascal-linux

    steps:
    - uses: actions/checkout@v3
    - uses: jlumbroso/free-disk-space@main
    - uses: docker/setup-buildx-action@v2

    - name: Build Docker Image
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha,scope=${{ matrix.tag }}
        cache-to: type=gha,ignore-error=true,mode=max,scope=${{ matrix.tag }}
        context: ${{ matrix.tag }}
        outputs: type=docker
        tags: 76eddge/build-images:${{ matrix.tag }}
        target: deploy

    - name: Push Release Docker Image
      if: github.event_name == 'release'
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username 76eddge --password-stdin
        GIT_TAG=${{ github.event.release.tag_name }}
        docker tag 76eddge/build-images:${{ matrix.tag }} 76eddge/build-images:${{ matrix.tag }}-${GIT_TAG#v}
        docker push -a 76eddge/build-images

    - name: Push Docker Image
      if: github.event_name != 'release' && startsWith(github.ref_name, 'push/')
      run: |
        branch=${{ github.ref_name }}
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username 76eddge --password-stdin
        docker tag 76eddge/build-images:${{ matrix.tag }} 76eddge/build-images:${{ matrix.tag }}-${branch:5}
        docker push "76eddge/build-images:${{ matrix.tag }}-${branch:5}"

    - name: Run Grype Scan
      if: github.event_name != 'release'
      run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock anchore/grype -o sarif docker:76eddge/build-images:${{ matrix.tag }} > ${{ matrix.tag }}.sarif

    - name: Upload Grype Scan Results
      if: github.event_name != 'release'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ matrix.tag }}.sarif
        category: ${{ matrix.tag }}

  build-windows:

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3

    - name: Build Docker Image
      run: |
        net stop docker
        dockerd --unregister-service
        dockerd --register-service --storage-opt "size=60G"
        net start docker
        cp nifty_pascal-linux/build.gradle nifty_pascal-windows/
        docker build nifty_pascal-windows --tag 76eddge/build-images:nifty_pascal-windows

    - name: Push Release Docker Image
      if: github.event_name == 'release'
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username 76eddge --password-stdin
        docker tag 76eddge/build-images:nifty_pascal-windows "76eddge/build-images:nifty_pascal-windows-$('${{ github.event.release.tag_name }}' -replace '^v', '')"
        docker push -a 76eddge/build-images

    - name: Push Docker Image
      if: github.event_name != 'release' && startsWith(github.ref_name, 'push/')
      run: |
        $branch = "${{ github.ref_name }}"
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username 76eddge --password-stdin
        docker tag 76eddge/build-images:nifty_pascal-windows "76eddge/build-images:nifty_pascal-windows-$($branch.Substring(5))"
        docker push "76eddge/build-images:nifty_pascal-windows-$($branch.Substring(5))"

    - name: Run Grype Scan
      if: github.event_name != 'release'
      run: |
        choco install grype
        grype --platform 'windows/amd64' -o sarif '76eddge/build-images:nifty_pascal-windows' | Out-File nifty_pascal-windows.sarif utf8

    - name: Upload Grype Scan Results
      if: github.event_name != 'release'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: nifty_pascal-windows.sarif
        category: nifty_pascal-windows
